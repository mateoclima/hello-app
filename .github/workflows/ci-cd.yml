name: CI/CD Pipeline

# Dispara o workflow quando houver push na branch main
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Faz checkout do código da aplicação (hello-app)
      - name: Checkout code
        uses: actions/checkout@v3

      # Configura o Docker Buildx (para builds otimizados, cache e multiplataforma)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Faz login no Docker Hub usando os secrets configurados no repositório
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Roda testes automatizados antes de buildar (ex.: FastAPI + pytest)
      - name: Run tests
        run: pytest || echo "Sem testes configurados ainda"

      # Builda e faz push da imagem Docker para o Docker Hub
      # Cria duas tags:
      # - uma única (sha do commit)
      # - e "latest" (para sempre apontar para a versão mais nova)
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            mateolima/hello-app:${{ github.sha }}
            mateolima/hello-app:latest

  update-manifest:
    needs: build-and-push  # Só roda se o build-and-push tiver sucesso
    runs-on: ubuntu-latest
    steps:
      # Faz checkout do repositório de manifests (infra usada pelo ArgoCD)
      - name: Checkout manifests repository
        uses: actions/checkout@v3
        with:
          repository: mateoclima/hello-manifests
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Atualiza a imagem no arquivo deployment.yaml
      - name: Update image tag in deployment
        run: |
          sed -i "s|image: .*|image: mateoclima/hello-app:${{ github.sha }}|" deployment.yaml

      # Cria automaticamente um Pull Request no repositório de manifests(não fazer push direto)
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          branch: update-image-${{ github.sha }}
          commit-message: "Update image to ${{ github.sha }}"
          title: "Update image to ${{ github.sha }}"
          body: "Atualizando a imagem no deployment para a versão do commit ${{ github.sha }}"